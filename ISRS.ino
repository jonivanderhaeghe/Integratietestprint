/*********************************************************************
  _____ _   _ _______ ______ _____  _____  _    _ _____ _______ _____ 
 |_   _| \ | |__   __|  ____|  __ \|  __ \| |  | |  __ \__   __/ ____|
   | | |  \| |  | |  | |__  | |__) | |__) | |  | | |__) | | | | (___  
   | | | . ` |  | |  |  __| |  _  /|  _  /| |  | |  ___/  | |  \___ \ 
  _| |_| |\  |  | |  | |____| | \ \| | \ \| |__| | |      | |  ____) |
 |_____|_| \_|  |_|  |______|_|  \_\_|  \_\\____/|_|      |_| |_____/  
**********************************************************************/

//## Interrupt service routines ##

/*************************************************************
// interrupt service routine, called when RNG goes from 1 to 0
**************************************************************/
void SmsInterrupt ()
{
   digitalWrite(GSM_DTR, LOW); // gsm in normal mode
  SmsReceived = true;   // set flag so main loop knows
}  // end of SmsInterrupt
